grid.arrange(LC_knnFit_84a, LC_ann_84a, LC_cart_84a,
LC_svm_84a, LC_rf_84a, ncol=2)
# PLOT----
LC_ann_84a <- gplot(LC_ann_84) + geom_raster(aes(fill= factor(value, labels=c("Agriculture", "Bareland", "
Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"),name= "Land Cover") +
ggtitle("Artificial Neural Network Classification") +
theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_ann_84a
LC_cart_84a <- gplot(LC_cart_84) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "Bareland",
"Green Spaces", "Urban")))) + scale_fill_manual(values= c("yellow", "grey", "green3", "red"), name= "Land Cover") + ggtitle("Decision Trees Classification") +theme(plot.title = element_text(lineheight=.4, face="bold"))
+ coord_equal()
LC_cart_84a
LC_svm_84a <- gplot(LC_svm_84) + geom_raster(aes(fill= factor(value, labels=c("Agriculture", "Bareland","Green Spaces", "Urban", "Water")))) +scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"),name= "Land Cover") +
ggtitle("Support Vector Machine Classification") +
theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_svm_84a
LC_rf_84a <- gplot(LC_rf_84) + geom_raster(aes(fill =factor(value, labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) + scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"),
name= "Land Cover") + ggtitle("Random Forest Classification") +theme(plot.title = element_text(lineheight=.4,face="bold")) + coord_equal()
LC_rf_84a
LC_knnFit_84a <- gplot(LC_knnFit_84) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) + scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("K Nearest Neighbour Classification") +
theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_knnFit_84a
grid.arrange(LC_knnFit_84a, LC_ann_84a, LC_cart_84a,
LC_svm_84a, LC_rf_84a, ncol=2)
# The RF classifier outperformed the KNN, ANN, DT and radial basis
# The RF classifier outperformed the KNN, ANN, DT and radial basis
# SVM classifiers. In addition, the RF classifier was not strongly
# The RF classifier outperformed the KNN, ANN, DT and radial basis
# SVM classifiers. In addition, the RF classifier was not strongly
# affected by outliers and class imbalances problems. Therefore, the RF
# The RF classifier outperformed the KNN, ANN, DT and radial basis
# SVM classifiers. In addition, the RF classifier was not strongly
# affected by outliers and class imbalances problems. Therefore, the RF
# classifier will be used for image classification in tutorial 2, and
rlang::last_error()
?gplot
# SET-UP
library(sp)
library(rgdal)
library(raster)
library(reshape)
library(grid)
library(gridExtra)
library(RStoolbox)
library(caret)
library(rasterVis)
library(corrplot)
library(doParallel)
library(NeuralNetTools)
library(rstudioapi)
library(ggplot2)
#load data------
setwd(dirname(getActiveDocumentContext()$path))
getwd()
raslist = list.files(getwd(), pattern = "img$",
full.names = T)
# stack layers
rasvars = stack(raslist)
# check attributes
rasvars
#plot imagery as single bands
TM5_Multidate_84 = plot(rasvars)
#plot imagery as single bands
TM5_Multidate_84 = plot(rasvars)
# SET-UP-----
library(sp)
library(rgdal)
library(raster)
library(reshape)
library(grid)
library(gridExtra)
library(RStoolbox)
library(caret)
library(rasterVis)
library(corrplot)
library(doParallel)
library(NeuralNetTools)
library(rstudioapi)
library(ggplot2)
## load data
setwd(dirname(getActiveDocumentContext()$path))
getwd()
# create list of rasters
raslist = list.files(getwd(), pattern = "img$",
full.names = T)
# stack layers
rasvars = stack(raslist)
# check attributes
rasvars
#plot imagery as single bands
TM5_Multidate_84 = plot(rasvars)
# load training data
ta_data = readOGR(getwd(), "TA_1984")
str(ta_data)
# summary
summary(ta_data)
ta = as.data.frame(extract(rasvars,ta_data))
ta_data@data=data.frame(ta_data@data, ta[match(rownames(ta_data@data),
rownames(ta)),])
# structure
str(ta_data@data)
# summary statistics
summary(ta_data@data)
# The statistics show that there are NAs. Therefore, we should
# remove the NAs before we proceed.
ta_data@data = na.omit(ta_data@data)
complete.cases(ta_data@data)
# prepare training and test data sets
hre_seed = 27
set.seed(hre_seed)
# split dataset
inTraining = createDataPartition(factor(ta_data@data$Cl1984),
p=.80, list = F)
training = ta_data@data[inTraining]
testing = ta_data@data[-inTraining]
#check dimensions
dim(training)
training = ta_data@data[inTraining,]
# split dataset
inTraining = createDataPartition(ta_data@data$Cl1984,
p=.80, list = F)
training = ta_data@data[inTraining,]
testing = ta_data@data[-inTraining,]
#check dimensions
dim(training)
dim(testing)
# Check the summary statistics
summary(training)
summary(testing)
# Visualization of training data set
featurePlot(x = training[, 2:13],
y = as.factor(training$Cl1984),
plot = 'density',
labels=c("Reflectance", "Density distribution"),
scales = list(x = list(relation="free"),
y = list(relation="free")),
layout = c(2,6),
auto.key = list(columns = 3))
featurePlot(x = training[, 2:13],
y = as.factor(training$Cl1984),
plot = 'box',
labels=c("Reflectance", "Density distribution"),
scales = list(x = list(relation="free"),
y = list(relation="free")),
layout = c(3, 2),
auto.key = list(columns = 3))
featurePlot(x = training[, 2:13],
y = as.factor(training$Cl1984),
plot = 'box',
labels=c("Reflectance", "Density distribution"),
scales = list(x = list(relation="free"),
y = list(relation="free")),
layout = c(2, 6),
auto.key = list(columns = 3))
# correlations
bandCorrelations = cor(training[,2:13])
dim(bandCorrelations)
bandCorrelations
# correlation matrix
corrplot.mixed(bandCorrelations, lower.col = "black",
upper = "color", number.cex=0.7)
# check the bands which are highly correlated
highCorrelated <- findCorrelation(bandCorrelations,
cutoff = .8)
length(highCorrelated)
names(training)[highCorrelated]
# Set-up the model tuning parameters ----
fitControl = trainControl(method = "repeatedcv",
number =5,
repeats = 5)
cl = makePSOCKcluster(5)
registerDoParallel(cl)
#train RF
set.seed(hre_seed)
rf_model = train(factor(Cl1984)~., data = training,
method="rf",
trControl=fitControl,
prox=T,
fitBest = F,
returnData=T)
# After finishing training, we can use the stopCluster() function to
# stop the parallel processing.
stopCluster(cl)
#check model performance
print(rf_model)
plot (rf_model)
#variable importance
rf_varImp = varImp(rf_model)
ggplot(rf_varImp, top=10)
# check the parameters of the best model.
rf_model$finalModel
pred_rf = predict(rf_model$finalModel, newdata=testing)
confusionMatrix(data = pred_rf, factor(testing$Cl1984))
# PERFORM CLASSIFICATION WITH RF CLASSIFIER
timeStart = proc.time()
LC_rf_84_multidate = predict(rasvars, rf_model)
proc.time() -timeStart
# DISPLAY RESULTS
LC_rf_84multidate <- gplot(LC_rf_84_multidate ) +
geom_raster(aes(fill =factor(value,
labels=c("Agriculture", "Bareland",
"Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"),
name= "Land Cover") +
ggtitle("Random Forest Classification") +
theme(plot.title = element_text(lineheight=.4,face="bold")) + coord_equal()
LC_rf_84multidate
# DISPLAY RESULTS
LC_rf_84multidate <- gplot(LC_rf_84_multidate ) +
geom_raster(aes(fill =factor(value,
labels=c("Agriculture", "Bareland",
"Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"),
name= "Land Cover") +
ggtitle("Random Forest Classification") +
theme(plot.title = element_text(lineheight=.4,face="bold")) + coord_equal()
LC_rf_84multidate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(LC_rf_84_multidate) + geom_ra
# DISPLAY RESULTS
LC_84_Multdate <- gplot(LC_rf_84_multidate) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "re
d", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(LC_rf_84_multidate) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
ff =LC_rf_84_multidate %>% na.omit
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow",  "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "white", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water","NA")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water","NA")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme_classic(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water","NA")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme_classic(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme_classic(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water"...)))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water"..)))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water",..)))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water","NA")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3","white"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value, labels=c("Agriculture", "
Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
complete.cases(ff)
complete.cases(ff)
ff
ff
# save raster
writeRaster(LC_rf_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
datatype='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
datatype='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")),na.rm=TRUE)) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff,na.rm=TRUE) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold"),na.rm=TRUE) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water"))),na.rm=TRUE) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
datatype='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
ff =LC_rf_84_multidate
ff
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(na.rm = TRUE,fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff,na.rm = TRUE) + geom_raster(aes(na.rm = TRUE,fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")))) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff,na.rm = TRUE) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")),na.rm = TRUE)) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")),na.rm = TRUE)) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")),na.exclude=T)) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
# DISPLAY RESULTS
LC_84_Multdate <- gplot(ff) + geom_raster(aes(fill = factor(value,
labels=c("Agriculture", "Bareland", "Green Spaces", "Urban", "Water")),na.omit=T)) +
scale_fill_manual(values = c("yellow", "grey", "green3", "red", "blue3"), name= "Land Cover") + ggtitle("Random For
est Classification") +theme(plot.title = element_text(lineheight=.4, face="bold")) + coord_equal()
LC_84_Multdate
?writeRaster
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
format='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
format='INT1U',
index=1,
NAflag=f,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
format='INT1U',
index=1,
NAflag=f,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
format='INT1U',
index=1,
NAflag=f,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
format='INT2U',
index=1,
NAflag=f,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
format='INT2U',
index=1,
NAflag=F,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
dataType='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tif",
type="raw",
datatype='FLT4S',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
# save raster
writeRaster(raster(LC_84_Multdate),
"HreRF_Multidate_84.tif",
type="raw",
datatype='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
l = raster(LC_84_Multdate)
ggsave(plot=LC_84_Multdate, "HreRF_Multidate_84.tif", device = "tiff")
# save raster
#doesn't work
writeRaster(LC_84_Multdate,
"HreRF_Multidate_84.tiff",
type="raw",
datatype='INT1U',
index=1,
na.rm=TRUE,
progress="window",
overwrite=TRUE)
ggsave(plot=LC_84_Multdate, "HreRF_Multidate_84.tif", device = "tiff",na.rm=T)
ggsave(plot=LC_84_Multdate, "HreRF_Multidate_84.tiff", device = "tiff",na.omit=T)
ggsave(plot=LC_84_Multdate, "HreRF_Multidate_84.tiff", device = "tiff")
